{"version":3,"file":"static/js/288.7844b5a9.chunk.js","mappings":"2PA8FMA,EAAwBC,EAAAA,GAAAA,IAAH,qEAKrBC,EAAsBD,EAAAA,GAAAA,IAAH,uWAkBnBE,EAAQF,EAAAA,GAAAA,GAAH,gOAaLG,EAAgBH,EAAAA,GAAAA,IAAH,8GAObI,EAAOJ,EAAAA,GAAAA,IAAH,yCAIJK,EAASL,EAAAA,GAAAA,OAAH,4VAmBZ,UAzJ8B,WAC5B,OAA8BM,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,YAA9B,eAAOG,EAAP,KAAgBC,EAAhB,KAGQC,GAAuBC,EAAAA,EAAAA,MAAvBD,mBAEFE,GAAWC,EAAAA,EAAAA,MAiCjB,OA/BAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAiB,CACrBC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEV,mBAAoBA,KAEvCW,EAAgB,yCAAG,sHAEEC,MAAM,GAAD,OACvBC,oCADuB,qBAE1BR,GAJmB,cAEfS,EAFe,gBAOOA,EAASC,OAPhB,QAOfC,EAPe,UAWnBC,aAAaC,QAAQ,QAArB,OAA8BF,QAA9B,IAA8BA,GAA9B,UAA8BA,EAAeG,YAA7C,aAA8B,EAAqBC,OACnDrB,GAAW,GACXF,GAAW,IAbQ,kDAgBrBwB,QAAQC,IAAI,KAAMC,OAClBxB,GAAW,GACXF,GAAW,GAlBU,0DAAH,qDAqBtBc,GACD,GAAE,KAGD,SAACvB,EAAD,UACGQ,GACC,+BACE,SAAC,IAAD,OAGF,+BACE,UAACN,EAAD,YACE,SAACE,EAAD,WACE,SAACC,EAAD,CAAM+B,IAAKC,EAAWC,IAAI,iBAEf,IAAZ5B,GACC,iCACE,SAACP,EAAD,gDACA,SAACG,EAAD,CACEiC,QAAS,WACPzB,EAAS,MAAM0B,EAAAA,EAAAA,IAChB,EAHH,iCASU,IAAZ9B,IACE,iCACE,SAACP,EAAD,sEAGA,SAACG,EAAD,CACEiC,QAAS,WACPzB,EAAS,YAAY0B,EAAAA,EAAAA,IACtB,EAHH,0CAejB,C","sources":["components/pages/EmailVerificationPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport LoadingSpinner from \"../styleComponents/LoadingSpinner\";\r\nimport styled from \"styled-components\";\r\nimport logoBlack from \"../../assets/logoBlack.png\";\r\nimport { scrollToTop } from \"../utils\";\r\n\r\nconst EmailVerificationPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState();\r\n\r\n  // getting the verificationString from the url that user receive\r\n  const { verificationString } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // POST info to server\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ verificationString: verificationString }),\r\n    };\r\n    const loadVerification = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/api/verify-email`,\r\n          requestOptions\r\n        );\r\n\r\n        const parseResponse = await response.json();\r\n\r\n        if (parseResponse) {\r\n          // set the key token in local storage to the new token\r\n          localStorage.setItem(\"token\", parseResponse?.data?.token);\r\n          setSuccess(true);\r\n          setLoading(false);\r\n        }\r\n      } catch (error) {\r\n        console.log(error.stack);\r\n        setSuccess(false);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadVerification();\r\n  }, []);\r\n\r\n  return (\r\n    <VerificationContainer>\r\n      {loading ? (\r\n        <>\r\n          <LoadingSpinner />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <VerificationWrapper>\r\n            <LogoContainer>\r\n              <Logo src={logoBlack} alt=\"logoBlack\" />\r\n            </LogoContainer>\r\n            {success === true ? (\r\n              <>\r\n                <Title>Thanks for verifying your email.</Title>\r\n                <Button\r\n                  onClick={() => {\r\n                    navigate(\"/\"), scrollToTop();\r\n                  }}\r\n                >\r\n                  Go To Home Page\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              success === false && (\r\n                <>\r\n                  <Title>\r\n                    Something went wrong while trying to verify you email.\r\n                  </Title>\r\n                  <Button\r\n                    onClick={() => {\r\n                      navigate(\"/signup\"), scrollToTop();\r\n                    }}\r\n                  >\r\n                    Back To SignUp Page\r\n                  </Button>\r\n                </>\r\n              )\r\n            )}\r\n          </VerificationWrapper>\r\n        </>\r\n      )}\r\n    </VerificationContainer>\r\n  );\r\n};\r\n\r\n// Login page style\r\nconst VerificationContainer = styled.div`\r\n  min-height: 100vh;\r\n  position: relative;\r\n`;\r\n\r\nconst VerificationWrapper = styled.div`\r\n  width: fit-content;\r\n  padding: 50px;\r\n  margin: 6rem auto;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 12px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 90%;\r\n    padding: 30px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 15px 0;\r\n  font-size: 30px;\r\n  margin: 20px 0;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    font-size: 25px;\r\n  }\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 150px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 12px 15px;\r\n  color: white;\r\n  background: black;\r\n  border: 1px solid white;\r\n  border-radius: 25px;\r\n  font-size: 18px;\r\n  transition: all 0.7s ease-in-out;\r\n  margin: 25px 0;\r\n  width: 100%;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: transparent;\r\n    color: black;\r\n    border: 1px solid black;\r\n  }\r\n`;\r\n\r\nexport default EmailVerificationPage;\r\n"],"names":["VerificationContainer","styled","VerificationWrapper","Title","LogoContainer","Logo","Button","useState","loading","setLoading","success","setSuccess","verificationString","useParams","navigate","useNavigate","useEffect","requestOptions","method","headers","body","JSON","stringify","loadVerification","fetch","process","response","json","parseResponse","localStorage","setItem","data","token","console","log","stack","src","logoBlack","alt","onClick","scrollToTop"],"sourceRoot":""}