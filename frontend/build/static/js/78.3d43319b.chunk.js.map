{"version":3,"file":"static/js/78.3d43319b.chunk.js","mappings":"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","sources":["components/pages/BookingPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport surf1 from \"../../assets/surf1.jpg\";\r\nimport styled from \"styled-components\";\r\nimport LoadingSpinner from \"../styleComponents/LoadingSpinner\";\r\nimport { BookingContext } from \"../context/BookingContext\";\r\nimport { useContext } from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { Circles } from \"react-loader-spinner\";\r\nimport { addDays } from \"date-fns\";\r\n\r\nconst BookingPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [listing, setListing] = useState();\r\n  const [renter, setRenter] = useState();\r\n  const { id } = useParams();\r\n\r\n  // getting information from booking context\r\n  const { dateRange, setDateRange, bookingLoading, setBookingLoading } =\r\n    useContext(BookingContext);\r\n\r\n  let navigate = useNavigate();\r\n\r\n  // fetching data by listing id\r\n  useEffect(() => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const fechingLisitngDataHandler = async () => {\r\n        // fetching listing information by lisitng id\r\n        const fetchListingById = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/api/listings/listing/${id}`\r\n        );\r\n\r\n        // parse the data received\r\n        const responseJson = await fetchListingById.json();\r\n\r\n        // fetch renter information by renterId\r\n        const fetchRenter = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/api/user/${responseJson.data.renterId}`\r\n        );\r\n\r\n        // parse the data\r\n        const responseJsonRenter = await fetchRenter.json();\r\n\r\n        if (responseJson.data && responseJsonRenter.data) {\r\n          setListing(responseJson.data);\r\n\r\n          setRenter(responseJsonRenter.data);\r\n\r\n          setLoading(false);\r\n        } else {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      fechingLisitngDataHandler();\r\n    } catch (error) {\r\n      console.log(error.stack);\r\n      setLoading(false);\r\n    }\r\n  }, [id]);\r\n\r\n  // function to calculate the number of reservation days\r\n  const numOfReservationDay =\r\n    (dateRange[0].endDate - dateRange[0].startDate) / (1000 * 3600 * 24);\r\n\r\n  // adding reservation to db\r\n  const reservationHandler = async () => {\r\n    setBookingLoading(true);\r\n\r\n    try {\r\n      // reservation info\r\n      const reservation = {\r\n        listingId: listing._id,\r\n        renterId: listing.renterId,\r\n        clientId: JSON.parse(localStorage.getItem(\"id\")),\r\n        bookingDate: [\r\n          {\r\n            startDate: dateRange[0].startDate,\r\n            endDate: dateRange[0].endDate,\r\n          },\r\n        ],\r\n        location: listing.location,\r\n      };\r\n\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(reservation),\r\n      };\r\n\r\n      // post the new booking to our db\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}/api/listing/reservation`,\r\n        requestOptions\r\n      );\r\n\r\n      if (response.ok) {\r\n        setBookingLoading(false);\r\n        setDateRange([\r\n          {\r\n            startDate: new Date(),\r\n            endDate: addDays(new Date(), 1),\r\n            key: \"selection\",\r\n          },\r\n        ]);\r\n        navigate(`/listing/${id}`);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.stack);\r\n      setBookingLoading(false);\r\n    }\r\n    setBookingLoading(false);\r\n  };\r\n\r\n  return (\r\n    <BookingContainer>\r\n      {loading ? (\r\n        <LoadingSpinner />\r\n      ) : (\r\n        <>\r\n          {listing && renter && !loading && (\r\n            <BookingWrapper>\r\n              <Banner>\r\n                <BannerImg src={surf1} alt=\"banner\" />\r\n                <h2>\r\n                  Book {listing.name} From {renter.username}\r\n                </h2>\r\n              </Banner>\r\n              <Main>\r\n                <BookingInfo>\r\n                  <h3>Booking Details</h3>\r\n                  <InfoContainer>\r\n                    <p>\r\n                      <span>Price Per Day: </span>${listing.price}\r\n                    </p>\r\n                    <p>\r\n                      <span>Booking Date: </span>\r\n                      {`${format(\r\n                        dateRange[0].startDate,\r\n                        \"MM/dd/yyyy\"\r\n                      )} to ${format(dateRange[0].endDate, \"MM/dd/yyyy\")}`}{\" \"}\r\n                      {numOfReservationDay === 1 ? (\r\n                        <span>({numOfReservationDay}/Day)</span>\r\n                      ) : (\r\n                        <span>({numOfReservationDay}/Days)</span>\r\n                      )}\r\n                    </p>\r\n                    <p>\r\n                      <span>\r\n                        Total Price: $\r\n                        {Number(listing.price) * numOfReservationDay}\r\n                      </span>\r\n                    </p>\r\n                    <ButtonWrapper>\r\n                      <Button onClick={reservationHandler}>\r\n                        {bookingLoading ? (\r\n                          <Circles\r\n                            height=\"20\"\r\n                            width=\"20\"\r\n                            color=\"#54cbe3\"\r\n                            ariaLabel=\"circles-loading\"\r\n                            wrapperClass=\"spinner\"\r\n                            visible={true}\r\n                          />\r\n                        ) : (\r\n                          \"Confirm Booking\"\r\n                        )}\r\n                      </Button>\r\n                    </ButtonWrapper>\r\n                  </InfoContainer>\r\n                </BookingInfo>\r\n              </Main>\r\n            </BookingWrapper>\r\n          )}\r\n        </>\r\n      )}\r\n    </BookingContainer>\r\n  );\r\n};\r\n\r\n// Booking style\r\nconst BookingContainer = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: 220px;\r\n`;\r\n\r\nconst BookingWrapper = styled.div``;\r\n\r\nconst Main = styled.div`\r\n  display: flex;\r\n  max-width: 600px;\r\n  margin: 20px auto;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  gap: 20px;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n`;\r\n\r\nconst Banner = styled.div`\r\n  height: 160px;\r\n  position: relative;\r\n\r\n  h2 {\r\n    position: absolute;\r\n    top: 50px;\r\n    left: 20px;\r\n    font-size: 35px;\r\n    font-weight: 900;\r\n    text-transform: capitalize;\r\n    color: #242526;\r\n  }\r\n`;\r\n\r\nconst BannerImg = styled.img`\r\n  height: 160px;\r\n  width: 100%;\r\n  object-fit: cover;\r\n  opacity: 0.7;\r\n`;\r\n\r\nconst BookingInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  border: 1px solid;\r\n\r\n  background-color: #f5f0ed;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  gap: 20px;\r\n\r\n  span {\r\n    font-weight: 500;\r\n    padding-right: 5px;\r\n  }\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 25px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  width: 60%;\r\n\r\n  background: transparent;\r\n  border: 1px solid;\r\n  transition: background 0.5s ease-in-out;\r\n\r\n  :hover {\r\n    background-color: #dadce1;\r\n  }\r\n\r\n  @media screen and (max-width: 700px) {\r\n    padding: 10px 35px;\r\n  }\r\n\r\n  .spinner {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport default BookingPage;\r\n"],"names":["BookingContainer","styled","BookingWrapper","Main","Banner","BannerImg","BookingInfo","InfoContainer","ButtonWrapper","Button","useState","loading","setLoading","listing","setListing","renter","setRenter","id","useParams","useContext","BookingContext","dateRange","setDateRange","bookingLoading","setBookingLoading","navigate","useNavigate","useEffect","fechingLisitngDataHandler","fetch","process","fetchListingById","json","responseJson","data","renterId","fetchRenter","responseJsonRenter","error","console","log","stack","numOfReservationDay","endDate","startDate","reservationHandler","reservation","listingId","_id","clientId","JSON","parse","localStorage","getItem","bookingDate","location","requestOptions","method","headers","body","stringify","ok","Date","addDays","key","src","surf1","alt","name","username","price","format","Number","onClick","height","width","color","ariaLabel","wrapperClass","visible"],"sourceRoot":""}