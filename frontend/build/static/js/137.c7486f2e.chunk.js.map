{"version":3,"file":"static/js/137.c7486f2e.chunk.js","mappings":"8SAcMA,EAAOC,EAAAA,GAAAA,IAAH,gPAaJC,EAAQD,EAAAA,GAAAA,GAAH,gKASLE,EAAaF,EAAAA,GAAAA,IAAH,iYAqBhB,EArDkB,SAAC,GAAqB,IAAnBG,EAAkB,EAAlBA,YACnB,OACE,UAACJ,EAAD,YACE,SAACE,EAAD,mCACA,SAACC,EAAD,CAAYE,QAAS,kBAAMD,EAAY,EAAlB,EAArB,qBAGL,E,+DC0GKE,GAAUL,EAAAA,GAAAA,IAAH,+IASPM,GAAWN,EAAAA,GAAAA,IAAH,sCAIRO,GAAYP,EAAAA,GAAAA,IAAH,4SAoBTQ,GAAOR,EAAAA,GAAAA,KAAH,iEAKJS,GAAWT,EAAAA,GAAAA,GAAH,4CAIRU,GAAQV,EAAAA,GAAAA,GAAH,4CAILW,GAAcX,EAAAA,GAAAA,GAAH,mFAQXY,GAAQZ,EAAAA,GAAAA,GAAH,+EAMLa,GAAOb,EAAAA,GAAAA,GAAH,+EAMJC,GAAQD,EAAAA,GAAAA,GAAH,wIAQLc,GAAed,EAAAA,GAAAA,IAAH,4EAMZe,GAASf,EAAAA,GAAAA,OAAH,2WAoBNgB,GAAahB,EAAAA,GAAAA,OAAH,4XAoBViB,GAAejB,EAAAA,GAAAA,IAAH,iIAQlB,GA7OgB,SAAC,GAAmC,IAAjCkB,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACxBC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAGMC,EAAuB,yCAAG,gGAExBC,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,KAAMd,EAAYc,KAClBC,MAAOf,EAAYe,MACnBC,SAAUhB,EAAYgB,SACtBC,YAAajB,EAAYiB,YACzBC,YAAalB,EAAYkB,YACzBC,MAAOnB,EAAYmB,MACnBC,KAAMpB,EAAYoB,KAClBC,SAAUrB,EAAYqB,SACtBC,SAAUtB,EAAYsB,SACtBC,SAAUvB,EAAYuB,SACtBC,SAAUxB,EAAYwB,SACtBC,gBAAiBzB,EAAYyB,gBAC7BC,WAAY1B,EAAY0B,cAlBE,SAuB5BpB,GAAW,GAvBiB,SAwBLqB,MAAM,GAAD,OACvBC,oCADuB,oBAE1BpB,GA1B0B,OA6BJ,MA7BI,OA6BfqB,SACXvB,GAAW,GACXJ,EAAS,iBA/BiB,gDAkC5B4B,QAAQC,IAAI,KAAMC,SAClB1B,GAAW,GAnCiB,yDAAH,qDAuC7B,OACE,iCACE,UAACnB,GAAD,YACE,UAACC,GAAD,YACE,SAAC,GAAD,UAAQY,EAAYc,QACpB,SAAClB,GAAD,UACGI,EAAYsB,SAASW,OAAS,IAC7B,SAACrC,GAAD,WACE,SAACsC,GAAA,EAAD,CAAaC,OAAQnC,EAAYsB,mBAKzC,UAACjC,GAAD,YACE,SAACE,GAAD,UAAWS,EAAYqB,YACvB,UAAC7B,GAAD,eAASQ,EAAYe,MAArB,YACA,UAACtB,GAAD,YACE,SAACH,GAAD,6BACA,uBAAIU,EAAYkB,kBAElB,UAACxB,GAAD,YACE,SAACJ,GAAD,uBACA,uBAAIU,EAAYmB,YAElB,UAACxB,GAAD,YACE,SAACL,GAAD,sBACA,uBAAIU,EAAYoB,iBAKtB,UAACrB,GAAD,YACE,SAACD,GAAD,CACEsC,KAAK,SACLlD,QAAS,WACPe,EAAa,EAAGD,EAAa,KAAKqC,EAAAA,GAAAA,IACnC,EAJH,mBASA,SAACxC,GAAD,CACEX,QAAS,WACPqB,KAA2B8B,EAAAA,GAAAA,IAC5B,EAHH,SAKGhC,GACC,SAAC,MAAD,CACEiC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAa,UACbC,SAAS,IAGX,gBAMX,E,WCgBKC,GAAO9D,EAAAA,GAAAA,KAAH,wiCA2DJe,GAASf,EAAAA,GAAAA,OAAH,iYAqBZ,GA7MqB,SAAC,GAAkC,IAAhCG,EAA+B,EAA/BA,YAAae,EAAkB,EAAlBA,YACnC,GAAgCI,EAAAA,EAAAA,UAAS,CACvCY,SAAU,GACVC,YAAa,KAFf,eAAO4B,EAAP,KAAiBC,EAAjB,MAMAC,EAAAA,EAAAA,YAAU,WACRD,EAAY,CACV9B,SAAUhB,EAAYgB,SACtBC,YAAajB,EAAYiB,aAE5B,GAAE,IAGH,IAAM+B,EAAc,SAACC,GACnBH,GAAY,SAACI,GAAD,eAAC,UAAeA,GAAhB,eAAuBD,EAAEE,OAAOrC,KAAOmC,EAAEE,OAAOC,OAAhD,GACb,EAOD,OACE,UAACR,GAAD,CAAMS,SALsB,SAACJ,GAC7BA,EAAEK,gBACH,EAGC,WACE,qDAEA,kBACEC,SAAUP,EACVZ,KAAK,QACLtB,KAAK,WACL0C,GAAG,OACHJ,MAAM,OACNK,QAA+B,SAAtBZ,EAAS7B,YAEpB,kBAAO0C,QAAQ,OAAf,mBACA,kBACEH,SAAUP,EACVZ,KAAK,QACLtB,KAAK,WACL0C,GAAG,OACHJ,MAAM,OACNK,QAA+B,SAAtBZ,EAAS7B,YAEpB,kBAAO0C,QAAQ,OAAf,mBACA,kBACEH,SAAUP,EACVZ,KAAK,QACLtB,KAAK,WACL0C,GAAG,OACHJ,MAAM,OACNK,QAA+B,SAAtBZ,EAAS7B,YAEpB,kBAAO0C,QAAQ,OAAf,mBAEA,wDAEA,kBACEH,SAAUP,EACVZ,KAAK,QACLtB,KAAK,cACL0C,GAAG,sBACHJ,MAAM,sBACNK,QAAkC,wBAAzBZ,EAAS5B,eAEpB,kBAAOyC,QAAQ,sBAAf,kCACA,kBACEH,SAAUP,EACVZ,KAAK,QACLtB,KAAK,cACL0C,GAAG,kBACHJ,MAAM,kBACNK,QAAkC,oBAAzBZ,EAAS5B,eAEpB,kBAAOyC,QAAQ,kBAAf,8BACA,kBACEH,SAAUP,EACVZ,KAAK,QACLtB,KAAK,cACL0C,GAAG,gBACHJ,MAAM,gBACNK,QAAkC,kBAAzBZ,EAAS5B,eAEpB,kBAAOyC,QAAQ,gBAAf,4BACA,kBACEH,SAAUP,EACVZ,KAAK,QACLtB,KAAK,cACL0C,GAAG,YACHJ,MAAM,YACNK,QAAkC,cAAzBZ,EAAS5B,eAEpB,kBAAOyC,QAAQ,YAAf,wBACA,kBACEH,SAAUP,EACVZ,KAAK,QACLtB,KAAK,cACL0C,GAAG,YACHJ,MAAM,YACNK,QAAkC,cAAzBZ,EAAS5B,eAEpB,kBAAOyC,QAAQ,YAAf,wBACA,kBACEH,SAAUP,EACVZ,KAAK,QACLtB,KAAK,cACL0C,GAAG,mBACHJ,MAAM,mBACNK,QAAkC,qBAAzBZ,EAAS5B,eAEpB,kBAAOyC,QAAQ,mBAAf,+BACA,SAAC,GAAD,CACExE,QAAS,WAEPD,EAAY,EAAG4D,EAAU,KAAKR,EAAAA,GAAAA,IAC/B,EAJH,oBAUL,E,4CC9FKsB,GAAqB7E,EAAAA,GAAAA,IAAH,upBAqClBc,GAAed,EAAAA,GAAAA,IAAH,4JASZ8E,GAAU9E,EAAAA,GAAAA,IAAH,6fAkCb,GAzGkB,SAAC,GAA0B,IAAxB+E,EAAuB,EAAvBA,iBACnB,OACE,UAACF,GAAD,YACE,qBAAUP,MAAOS,EAAkBC,IAAK,IAAKC,UAAU,iBAEvD,UAAC,GAAD,YACE,SAACH,GAAD,WACE,gBAAKI,IAAKhD,GAAUiD,IAAI,gBAE1B,SAACL,GAAD,WACE,gBAAKI,IAAK9C,GAAa+C,IAAI,2BAG7B,SAACL,GAAD,WACE,gBAAKI,IAAKE,GAAQD,IAAI,sBAExB,SAACL,GAAD,WACE,gBAAKI,IAAKG,GAAcF,IAAI,wBAKrC,ECuEKrB,GAAO9D,EAAAA,GAAAA,KAAH,8oBAyCJiB,GAAejB,EAAAA,GAAAA,IAAH,iIAQZe,GAASf,EAAAA,GAAAA,OAAH,2WAoBNgB,GAAahB,EAAAA,GAAAA,OAAH,4XAmBhB,GAxLwB,SAAC,GAAgD,IAA9CG,EAA6C,EAA7CA,YAAagB,EAAgC,EAAhCA,aAAcD,EAAkB,EAAlBA,YACpD,GAAgCI,EAAAA,EAAAA,UAAS,CACvCU,KAAM,GACNC,MAAO,GACPI,MAAO,GACPC,KAAM,GACNC,SAAU,GACVH,YAAa,KANf,eAAO2B,EAAP,KAAiBC,EAAjB,MAUAC,EAAAA,EAAAA,YAAU,WACRD,EAAY9C,EACb,GAAE,IAGH,IAAMoE,EAAe,SAACnB,GACpBH,GAAY,SAACI,GAAD,eAAC,UAAeA,GAAhB,eAAuBD,EAAEE,OAAOrC,KAAOmC,EAAEE,OAAOC,OAAhD,GACb,EAED,OACE,UAAC,GAAD,CAAMC,SAAU,kBAAMJ,EAAEK,gBAAR,EAAhB,WACE,8CACA,kBACElB,KAAK,OACLtB,KAAK,OACLsC,MAAOP,EAAS/B,KAChByC,SAAUa,EACVC,YAAY,eACZC,UAAQ,KAEV,uCACA,kBACElC,KAAK,SACLtB,KAAK,QACLsC,MAAOP,EAAS9B,MAChBwC,SAAUa,EACVC,YAAY,gBACZC,UAAQ,KAEV,sCACA,kBACElC,KAAK,OACLtB,KAAK,QACLsC,MAAOP,EAAS1B,MAChBoC,SAAUa,EACVC,YAAY,WAEd,qCACA,kBACEjC,KAAK,OACLtB,KAAK,OACLsC,MAAOP,EAASzB,KAChBmC,SAAUa,EACVC,YAAY,UAEd,0CACA,kBACEjC,KAAK,OACLtB,KAAK,WACLsC,MAAOP,EAASxB,SAChBkC,SAAUa,EACVC,YAAY,WACZC,UAAQ,KAEV,6CACA,qBACElC,KAAK,YACLtB,KAAK,cACLsC,MAAOP,EAAS3B,YAChBqC,SAAUa,EACVC,YAAY,cACZC,UAAQ,KAEV,UAAC,GAAD,YACE,SAAC,GAAD,CACElC,KAAK,SACLlD,QAAS,WACPe,EAAa,EAAG4C,EAAU,IAAIR,EAAAA,GAAAA,IAC/B,EAJH,mBAQA,SAAC,GAAD,CACEnD,QAAS,WACPD,EAAY,EAAG4D,EAAU,KAAKR,EAAAA,GAAAA,IAC/B,EAHH,uBAUP,E,sBCuCKO,GAAO9D,EAAAA,GAAAA,KAAH,qcA4BJiB,GAAejB,EAAAA,GAAAA,IAAH,wMAYZe,GAASf,EAAAA,GAAAA,OAAH,2WAoBNgB,GAAahB,EAAAA,GAAAA,OAAH,4XAoBVyF,GAAezF,EAAAA,GAAAA,MAAH,qHAQZ0F,GAAQ1F,EAAAA,GAAAA,MAAH,6bAwBLc,GAAed,EAAAA,GAAAA,IAAH,4MAYZ2F,GAAa3F,EAAAA,GAAAA,IAAH,4bA0BV4F,GAAM5F,EAAAA,GAAAA,IAAH,yGAOT,GA/RyB,SAAC,GAAgD,IAAD,EAA7CG,EAA6C,EAA7CA,YAAagB,EAAgC,EAAhCA,aAAcD,EAAkB,EAAlBA,YACrD,GAAgCI,EAAAA,EAAAA,UAAS,CACvCkB,SAAU,KADZ,eAAOuB,EAAP,KAAiBC,EAAjB,KAIA,GAA8B1C,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MAGAyC,EAAAA,EAAAA,YAAU,WACRD,EAAY,CACVxB,SAAUtB,EAAYsB,UAEzB,GAAE,IAGH,IAgBMqD,EAAuB,yCAAG,WAAOC,GAAP,mFAC9BtE,GAAW,GAEW,eAAlBsE,EAASxC,MAA2C,cAAlBwC,EAASxC,KAHjB,wBAItByC,EAAO,IAAIC,UACZC,OAAO,OAAQH,GACpBC,EAAKE,OAAO,gBAAiB,eAC7BF,EAAKE,OAAO,aAAc,WAPE,kBAUApD,MAAM,GAAD,OAC1BC,wDACH,CACEnB,OAAQ,OACRE,KAAMkE,IAdgB,cAUpBG,EAVoB,iBAiBCA,EAAYC,OAjBb,QAiBpBC,EAjBoB,OAoB1BpC,EAAY,CACVxB,SAAS,GAAD,gBAAMuB,EAASvB,UAAf,CAAyB4D,EAAaC,WAAWC,eAG3D9E,GAAW,GAxBe,kDA0B1BwB,QAAQC,IAAI,KAAMsD,OAClB/E,GAAW,GA3Be,0DAAH,sDAgC7B,OACE,UAAC,GAAD,CACE+C,SAAU,WACRJ,EAAEK,gBACH,EAHH,WAKE,2DACA,6DACA,SAACiB,GAAD,CACEnC,KAAK,OACLtB,KAAK,OACL0C,GAAG,OACH8B,OAAO,WACP/B,SAAU,SAACN,GACT0B,EAAwB1B,EAAEE,OAAOoC,MAAM,GACxC,KAEH,SAACf,GAAD,CAAOd,QAAQ,OAAf,6BACCrD,GACC,SAAC,MAAD,CACEiC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAa,UACbC,SAAS,KAGX,SAAC,GAAD,iBACGE,QADH,IACGA,GADH,UACGA,EAAUvB,gBADb,aACG,EAAoBkE,KAAI,SAACC,EAAOC,GAC/B,OACE,+BACE,UAACjB,GAAD,YACE,SAAC,OAAD,CACEV,UAAU,YACV7E,QAAS,kBAnFA,SAACyG,GAE1B,IAGMC,GAHY,QAAO/C,EAASvB,UAGCuE,QACjC,SAACJ,GAAD,OAAWA,IAAUE,CAArB,IAIF7C,EAAY,CACVxB,SAAUsE,GAEb,CAsEgCE,CAAmBL,EAAzB,KAEX,SAACf,GAAD,CAAKV,IAAKyB,EAAOxB,IAAI,mBAAuByB,KAL7BA,IAStB,OAGL,UAAC,GAAD,YACE,SAAC,GAAD,CACEtD,KAAK,SACLlD,QAAS,WACPe,EAAa,EAAG4C,EAAU,KAAKR,EAAAA,GAAAA,IAChC,EAJH,mBASA,SAAC,GAAD,CACEnD,QAAS,WACPD,EAAY,EAAG4D,EAAU,KAAKR,EAAAA,GAAAA,IAC/B,EAHH,uBAUP,E,WC/BK0D,GAAmBjH,EAAAA,GAAAA,IAAH,qEAKhBkH,GAAqBlH,EAAAA,GAAAA,IAAH,0PAaxB,GA5GuB,WAErB,IAAMmH,GAAOC,EAAAA,GAAAA,KAEb,GAAkC9F,EAAAA,EAAAA,UAAS,GAA3C,eAAO+F,EAAP,KAAkBC,EAAlB,KACA,GAAgDhG,EAAAA,EAAAA,UAAS,GAAzD,eAAOyD,EAAP,KAAyBwC,EAAzB,KACA,GAAsCjG,EAAAA,EAAAA,UAAS,CAC7CU,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,YAAa,GACbC,YAAa,GACbC,MAAO,GACPC,KAAM,GACNC,SAAU,GACVC,SAAU,GACVC,UAAU,EACVC,SAAQ,OAAEyE,QAAF,IAAEA,OAAF,EAAEA,EAAMK,IAChB7E,gBAAiB,GACjBC,WAAY,KAbd,eAAO1B,EAAP,KAAoBuG,EAApB,KAiBMtH,EAAc,SAACyG,EAAOb,EAAMzB,GAGhC,GAFAgD,EAAaV,GAETb,EAAM,CAER,IAAM2B,GAAe,UAAQxG,GAGNyG,OAAOC,KAAK7B,GAEpBW,KAAI,SAACmB,GAClBH,EAAgBG,GAAO9B,EAAK8B,EAC7B,IAGDJ,EAAeC,GACfH,EAAoBjD,EACrB,CACF,EAGKnD,EAAe,SAACyF,EAAOb,EAAMzB,GACjCnE,EAAYyG,EAAOb,EAAMzB,EAC1B,EAED,OACE,8BACG6C,GACC,SAACF,GAAD,WACE,UAACC,GAAD,YACE,SAAC,GAAD,CAAWnC,iBAAkBA,IACd,IAAdsC,GACC,SAAC,EAAD,CAAWlH,YAAaA,IACR,IAAdkH,GACF,SAAC,GAAD,CACElH,YAAaA,EACbe,YAAaA,IAEC,IAAdmG,GACF,SAAC,GAAD,CACElH,YAAaA,EACbgB,aAAcA,EACdD,YAAaA,IAEC,IAAdmG,GACF,SAAC,GAAD,CACElH,YAAaA,EACbgB,aAAcA,EACdD,YAAaA,IAEC,IAAdmG,GACF,SAAC,GAAD,CAASnG,YAAaA,EAAaC,aAAcA,IAEjD,SAKN,+BACE,SAAC,KAAD,CAAU2G,GAAG,cAKtB,C,gGC1CKC,EAAe/H,EAAAA,GAAAA,IAAH,gEAKZgI,EAAahI,EAAAA,GAAAA,IAAH,4IAQViI,EAAkBjI,EAAAA,GAAAA,IAAH,qKAUfkI,EAAmBlI,EAAAA,GAAAA,IAAH,sKAUhBmI,EAAenI,EAAAA,GAAAA,IAAH,6JASZoI,EAAMpI,EAAAA,GAAAA,IAAH,qGAMT,IArGoB,SAAC,GAAgB,IAAdqD,EAAa,EAAbA,OACrB,GAAwC/B,EAAAA,EAAAA,UAAS,GAAjD,eAAO+G,EAAP,KAAqBC,EAArB,KAyBA,OACE,+BACE,UAACP,EAAD,YACE,SAACE,EAAD,CAAiB7H,QAzBK,WAExBkI,EADmB,IAAjBD,EACchF,EAAOF,OAAS,EAEhBkF,EAAe,EAElC,EAmBK,UACE,SAAC,MAAD,OAEF,SAACH,EAAD,CAAkB9H,QAnBA,WAClBiI,IAAiBhF,EAAOF,OAAS,EACnCmF,EAAgB,GAEhBA,EAAgBD,EAAe,EAElC,EAaK,UACE,SAAC,MAAD,OAEF,SAACL,EAAD,CACEO,MAAO,CAAEC,gBAAgB,OAAD,OAASnF,EAAOgF,GAAhB,SAE1B,SAACF,EAAD,UACG9E,EAAOqD,KAAI,SAAC+B,EAAOC,GAClB,OACE,SAACN,EAAD,CAAsBhI,QAAS,kBAnBzB,SAACsI,GACjBJ,EAAgBI,EACjB,CAiBgDC,CAAUD,EAAhB,EAA/B,mBAAUA,EAIb,UAKV,C","sources":["components/Listing/addListing/CardBegin.js","components/Listing/addListing/CardEnd.js","components/Listing/addListing/CategoryForm.js","components/Listing/addListing/Indicator.js","components/Listing/addListing/ProductInfoForm.js","components/Listing/addListing/UploadPhotosForm.js","components/Listing/addListing/AddListingForm.js","components/styleComponents/ImageSlider.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// the first form card it just tell the user to start adding his listing\r\nconst CardBegin = ({ modifyIndex }) => {\r\n  return (\r\n    <Card>\r\n      <Title>Create your listing</Title>\r\n      <Cardbutton onClick={() => modifyIndex(2)}>Start</Cardbutton>\r\n    </Card>\r\n  );\r\n};\r\n\r\n// card begin style\r\nconst Card = styled.div`\r\n  height: fit-content;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 100%;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 40px;\r\n  font-weight: 500;\r\n  margin-bottom: 15px;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    font-size: 30px;\r\n  }\r\n`;\r\nconst Cardbutton = styled.div`\r\n  padding: 10px 17px;\r\n  margin: 10px auto;\r\n  background: black;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  width: 20%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 35%;\r\n  }\r\n`;\r\n\r\nexport default CardBegin;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Circles } from \"react-loader-spinner\";\r\nimport ImageSlider from \"../../styleComponents/ImageSlider\";\r\nimport { scrollToTop } from \"../../../utils/utils\";\r\n\r\n// the final card componenent\r\nconst CardEnd = ({ listingData, handleReturn }) => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // create new listing into our database\r\n  const UploadListingToDataBase = async () => {\r\n    // POST info to server\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: listingData.name,\r\n        price: listingData.price,\r\n        category: listingData.category,\r\n        subcategory: listingData.subcategory,\r\n        description: listingData.description,\r\n        model: listingData.model,\r\n        size: listingData.size,\r\n        location: listingData.location,\r\n        imageSrc: listingData.imageSrc,\r\n        isBooked: listingData.isBooked,\r\n        renterId: listingData.renterId,\r\n        reservationsIds: listingData.reservationsIds,\r\n        reviewsIds: listingData.reviewsIds,\r\n      }),\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}/api/add-listing`,\r\n        requestOptions\r\n      );\r\n\r\n      if (response.status === 201) {\r\n        setLoading(false);\r\n        navigate(\"/userlisting\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Listing>\r\n        <LeftSide>\r\n          <Title>{listingData.name}</Title>\r\n          <ImgContainer>\r\n            {listingData.imageSrc.length > 0 && (\r\n              <ImgContainer>\r\n                <ImageSlider slides={listingData.imageSrc} />\r\n              </ImgContainer>\r\n            )}\r\n          </ImgContainer>\r\n        </LeftSide>\r\n        <RightSide>\r\n          <Location>{listingData.location}</Location>\r\n          <Price>${listingData.price} /day</Price>\r\n          <Description>\r\n            <Span>Description: </Span>\r\n            <p>{listingData.description}</p>\r\n          </Description>\r\n          <Modal>\r\n            <Span>Model: </Span>\r\n            <p>{listingData.model}</p>\r\n          </Modal>\r\n          <Size>\r\n            <Span>Size: </Span>\r\n            <p>{listingData.size}</p>\r\n          </Size>\r\n        </RightSide>\r\n      </Listing>\r\n\r\n      <BtnContainer>\r\n        <BackButton\r\n          type=\"button\"\r\n          onClick={() => {\r\n            handleReturn(4, listingData, 70), scrollToTop();\r\n          }}\r\n        >\r\n          Back\r\n        </BackButton>\r\n\r\n        <Button\r\n          onClick={() => {\r\n            UploadListingToDataBase(), scrollToTop();\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <Circles\r\n              height=\"30\"\r\n              width=\"30\"\r\n              color=\"#54cbe3\"\r\n              ariaLabel=\"circles-loading\"\r\n              wrapperClass=\"spinner\"\r\n              visible={true}\r\n            />\r\n          ) : (\r\n            \"Create\"\r\n          )}\r\n        </Button>\r\n      </BtnContainer>\r\n    </>\r\n  );\r\n};\r\n\r\n// cardend style\r\nconst Listing = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst LeftSide = styled.div`\r\n  flex: 0.6;\r\n`;\r\n\r\nconst RightSide = styled.div`\r\n  flex: 0.4;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  gap: 15px;\r\n  padding: 20px;\r\n  max-width: fit-content;\r\n  position: sticky;\r\n\r\n  span {\r\n    font-weight: 700;\r\n  }\r\n\r\n  p {\r\n    font-weight: 400;\r\n  }\r\n`;\r\n\r\nconst Span = styled.span`\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Location = styled.h3`\r\n  font-size: 17px;\r\n`;\r\n\r\nconst Price = styled.h4`\r\n  font-size: 19px;\r\n`;\r\n\r\nconst Description = styled.h4`\r\n  max-width: 270px;\r\n\r\n  p {\r\n    padding-top: 10px;\r\n  }\r\n`;\r\n\r\nconst Modal = styled.h4`\r\n  display: flex;\r\n  gap: 5px;\r\n  align-items: center;\r\n`;\r\n\r\nconst Size = styled.h4`\r\n  display: flex;\r\n  gap: 5px;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 30px;\r\n  font-weight: 500;\r\n  padding-left: 15px;\r\n  text-align: center;\r\n  padding-bottom: 30px;\r\n`;\r\n\r\nconst ImgContainer = styled.div`\r\n  width: 90%;\r\n  height: 320px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 17px;\r\n  background: black;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  width: 20%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 33%;\r\n  }\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  padding: 10px 17px;\r\n  background: transparent;\r\n  color: black;\r\n  border: 1px solid black;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  width: 20%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 33%;\r\n  }\r\n`;\r\n\r\nconst BtnContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n  gap: 15px;\r\n`;\r\n\r\nexport default CardEnd;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { scrollToTop } from \"../../../utils/utils\";\r\n\r\n// The form that handle the selecting of category and subCategory\r\nconst CategoryForm = ({ modifyIndex, listingData }) => {\r\n  const [formData, setFormData] = useState({\r\n    category: \"\",\r\n    subcategory: \"\",\r\n  });\r\n\r\n  // set form data state to the global state if the user decide to go back so he can find what he typed\r\n  useEffect(() => {\r\n    setFormData({\r\n      category: listingData.category,\r\n      subcategory: listingData.subcategory,\r\n    });\r\n  }, []);\r\n\r\n  // handle radio input changes\r\n  const handleRadio = (e) => {\r\n    setFormData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  // prevent the form from reload the page when transitioning between forms\r\n  const categorySubmitHandler = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={categorySubmitHandler}>\r\n      <h1>Choose product category</h1>\r\n\r\n      <input\r\n        onChange={handleRadio}\r\n        type=\"radio\"\r\n        name=\"category\"\r\n        id=\"surf\"\r\n        value=\"surf\"\r\n        checked={formData.category === \"surf\"}\r\n      />\r\n      <label htmlFor=\"surf\">Surf</label>\r\n      <input\r\n        onChange={handleRadio}\r\n        type=\"radio\"\r\n        name=\"category\"\r\n        id=\"bike\"\r\n        value=\"bike\"\r\n        checked={formData.category === \"bike\"}\r\n      />\r\n      <label htmlFor=\"bike\">Bike</label>\r\n      <input\r\n        onChange={handleRadio}\r\n        type=\"radio\"\r\n        name=\"category\"\r\n        id=\"snow\"\r\n        value=\"snow\"\r\n        checked={formData.category === \"snow\"}\r\n      />\r\n      <label htmlFor=\"snow\">Snow</label>\r\n\r\n      <h1>Choose product subcategory</h1>\r\n\r\n      <input\r\n        onChange={handleRadio}\r\n        type=\"radio\"\r\n        name=\"subcategory\"\r\n        id=\"Standup paddleboard\"\r\n        value=\"Standup paddleboard\"\r\n        checked={formData.subcategory === \"Standup paddleboard\"}\r\n      />\r\n      <label htmlFor=\"Standup paddleboard\">Standup paddleboard</label>\r\n      <input\r\n        onChange={handleRadio}\r\n        type=\"radio\"\r\n        name=\"subcategory\"\r\n        id=\"kayak and canoe\"\r\n        value=\"kayak and canoe\"\r\n        checked={formData.subcategory === \"kayak and canoe\"}\r\n      />\r\n      <label htmlFor=\"kayak and canoe\">kayak and canoe</label>\r\n      <input\r\n        onChange={handleRadio}\r\n        type=\"radio\"\r\n        name=\"subcategory\"\r\n        id=\"Mountain bike\"\r\n        value=\"Mountain bike\"\r\n        checked={formData.subcategory === \"Mountain bike\"}\r\n      />\r\n      <label htmlFor=\"Mountain bike\">Mountain bike</label>\r\n      <input\r\n        onChange={handleRadio}\r\n        type=\"radio\"\r\n        name=\"subcategory\"\r\n        id=\"Road bike\"\r\n        value=\"Road bike\"\r\n        checked={formData.subcategory === \"Road bike\"}\r\n      />\r\n      <label htmlFor=\"Road bike\">Road bike</label>\r\n      <input\r\n        onChange={handleRadio}\r\n        type=\"radio\"\r\n        name=\"subcategory\"\r\n        id=\"Snowboard\"\r\n        value=\"Snowboard\"\r\n        checked={formData.subcategory === \"Snowboard\"}\r\n      />\r\n      <label htmlFor=\"Snowboard\">Snowboard</label>\r\n      <input\r\n        onChange={handleRadio}\r\n        type=\"radio\"\r\n        name=\"subcategory\"\r\n        id=\"Snow accessories\"\r\n        value=\"Snow accessories\"\r\n        checked={formData.subcategory === \"Snow accessories\"}\r\n      />\r\n      <label htmlFor=\"Snow accessories\">Snow accessories</label>\r\n      <Button\r\n        onClick={() => {\r\n          // change the index of form and submit the state data and handle the progress bar changes\r\n          modifyIndex(3, formData, 35), scrollToTop();\r\n        }}\r\n      >\r\n        Next\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\n// form listing style\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 17px;\r\n\r\n  h1 {\r\n    font-size: 25px;\r\n    font-weight: 500;\r\n\r\n    @media screen and (max-width: 700px) {\r\n      font-size: 21px;\r\n    }\r\n  }\r\n\r\n  input[type=\"radio\"] {\r\n    display: none;\r\n  }\r\n\r\n  label {\r\n    position: relative;\r\n    cursor: pointer;\r\n    color: #242526;\r\n    font-family: \"poppins\", sans-serif;\r\n    font-size: 20px;\r\n    border: 2px solid #242526;\r\n    border-radius: 10px;\r\n    padding: 5px 20px;\r\n    display: flex;\r\n    width: 45%;\r\n    align-items: center;\r\n\r\n    @media screen and (max-width: 700px) {\r\n      width: 75%;\r\n    }\r\n  }\r\n\r\n  label:before {\r\n    content: \"\";\r\n    height: 20px;\r\n    width: 20px;\r\n    border: 3px solid #242526;\r\n    border-radius: 50%;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  input:checked + label {\r\n    background-color: #242526;\r\n    color: white;\r\n  }\r\n\r\n  input[type=\"radio\"]:checked + label:before {\r\n    height: 16px;\r\n    width: 16px;\r\n    border: 10px solid white;\r\n    background-color: #01cc65;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 17px;\r\n  margin: 5px auto;\r\n  background: #000;\r\n  color: #f5f0ed;\r\n  border: none;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  width: 20%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 35%;\r\n  }\r\n`;\r\n\r\nexport default CategoryForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport category from \"../assets/category.png\";\r\nimport description from \"../assets/description.png\";\r\nimport images from \"../assets/images.png\";\r\nimport confirmation from \"../assets/confirmation.png\";\r\n\r\n// This component is responsible of the progress bar in the top of the form\r\nconst Indicator = ({ progressBarValue }) => {\r\n  return (\r\n    <IndicatorContainer>\r\n      <progress value={progressBarValue} max={100} className=\"progressBar\" />\r\n\r\n      <ImgContainer>\r\n        <ImgBloc>\r\n          <img src={category} alt=\"category\" />\r\n        </ImgBloc>\r\n        <ImgBloc>\r\n          <img src={description} alt=\"product description\" />\r\n        </ImgBloc>\r\n\r\n        <ImgBloc>\r\n          <img src={images} alt=\"product images\" />\r\n        </ImgBloc>\r\n        <ImgBloc>\r\n          <img src={confirmation} alt=\"confirm info\" />\r\n        </ImgBloc>\r\n      </ImgContainer>\r\n    </IndicatorContainer>\r\n  );\r\n};\r\n\r\n// indicator style\r\nconst IndicatorContainer = styled.div`\r\n  position: absolute;\r\n  padding-top: 0px;\r\n  left: 0px;\r\n  top: -150px;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 80%;\r\n    left: 50%;\r\n    top: -150px;\r\n    transform: translate(-50%, 10px);\r\n  }\r\n\r\n  .progressBar {\r\n    width: 99%;\r\n    position: absolute;\r\n    top: 30px;\r\n\r\n    @media screen and (max-width: 700px) {\r\n      top: 20px;\r\n    }\r\n  }\r\n\r\n  progress[value]::-webkit-progress-bar {\r\n    height: 10px;\r\n    border-radius: 20px;\r\n    background-color: #242526;\r\n  }\r\n\r\n  progress[value]::-webkit-progress-value {\r\n    height: 10px;\r\n    border-radius: 20px;\r\n    background-color: #54cbe3;\r\n  }\r\n`;\r\n\r\nconst ImgContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: relative;\r\n  z-index: 20;\r\n`;\r\n\r\nconst ImgBloc = styled.div`\r\n  width: 70px;\r\n  height: 70px;\r\n  background: #f1f1f1;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  :nth-child(1) {\r\n    position: relative;\r\n    right: 5px;\r\n  }\r\n\r\n  :nth-child(5) {\r\n    position: relative;\r\n    left: 5px;\r\n  }\r\n\r\n  img {\r\n    height: 40px;\r\n    width: 40px;\r\n  }\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 52px;\r\n    height: 52px;\r\n\r\n    img {\r\n      height: 30px;\r\n      width: 30px;\r\n    }\r\n  }\r\n`;\r\nexport default Indicator;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { scrollToTop } from \"../../../utils/utils\";\r\n\r\n// product info form component\r\nconst ProductInfoForm = ({ modifyIndex, handleReturn, listingData }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    price: \"\",\r\n    model: \"\",\r\n    size: \"\",\r\n    location: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  // set the formData state to the global state if the user go back\r\n  useEffect(() => {\r\n    setFormData(listingData);\r\n  }, []);\r\n\r\n  // handle user input changes\r\n  const handleChange = (e) => {\r\n    setFormData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={() => e.preventDefault()}>\r\n      <label>Product Name*</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={formData.name}\r\n        onChange={handleChange}\r\n        placeholder=\"Product Name\"\r\n        required\r\n      />\r\n      <label>Price*</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"price\"\r\n        value={formData.price}\r\n        onChange={handleChange}\r\n        placeholder=\"Renting Price\"\r\n        required\r\n      />\r\n      <label>Model</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"model\"\r\n        value={formData.model}\r\n        onChange={handleChange}\r\n        placeholder=\"Model\"\r\n      />\r\n      <label>Size</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"size\"\r\n        value={formData.size}\r\n        onChange={handleChange}\r\n        placeholder=\"Size\"\r\n      />\r\n      <label>Location*</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"location\"\r\n        value={formData.location}\r\n        onChange={handleChange}\r\n        placeholder=\"Location\"\r\n        required\r\n      />\r\n      <label>Description*</label>\r\n      <textarea\r\n        type=\"text-aria\"\r\n        name=\"description\"\r\n        value={formData.description}\r\n        onChange={handleChange}\r\n        placeholder=\"Description\"\r\n        required\r\n      />\r\n      <BtnContainer>\r\n        <BackButton\r\n          type=\"button\"\r\n          onClick={() => {\r\n            handleReturn(2, formData, 0), scrollToTop();\r\n          }}\r\n        >\r\n          Back\r\n        </BackButton>\r\n        <Button\r\n          onClick={() => {\r\n            modifyIndex(4, formData, 70), scrollToTop();\r\n          }}\r\n        >\r\n          Next\r\n        </Button>\r\n      </BtnContainer>\r\n    </Form>\r\n  );\r\n};\r\n\r\n// form listing style\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n\r\n  label {\r\n    width: 60%;\r\n    margin: 0 auto;\r\n    padding: 0 0 0 5px;\r\n    font-weight: 500;\r\n\r\n    @media screen and (max-width: 700px) {\r\n      width: 75%;\r\n    }\r\n  }\r\n\r\n  textarea,\r\n  input {\r\n    padding: 10px;\r\n    border-radius: 7px;\r\n    outline: none;\r\n    font-size: 17px;\r\n    width: 60%;\r\n    margin: 0 auto;\r\n    border: 1px solid;\r\n\r\n    @media screen and (max-width: 700px) {\r\n      width: 75%;\r\n    }\r\n  }\r\n\r\n  textarea {\r\n    max-width: 60%;\r\n    overflow-y: hidden;\r\n\r\n    @media screen and (max-width: 700px) {\r\n      max-width: 75%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BtnContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n  gap: 15px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 17px;\r\n  background: black;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  width: 20%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 33%;\r\n  }\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  padding: 10px 17px;\r\n  background: transparent;\r\n  color: black;\r\n  border: 1px solid black;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  width: 20%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 33%;\r\n  }\r\n`;\r\nexport default ProductInfoForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Circles } from \"react-loader-spinner\";\r\nimport { VscClose } from \"react-icons/vsc\";\r\nimport { scrollToTop } from \"../../../utils/utils\";\r\n\r\n// upload pictures form componenent\r\nconst UploadPhotosForm = ({ modifyIndex, handleReturn, listingData }) => {\r\n  const [formData, setFormData] = useState({\r\n    imageSrc: [],\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // set the formData state to the global state if the user go back\r\n  useEffect(() => {\r\n    setFormData({\r\n      imageSrc: listingData.imageSrc,\r\n    });\r\n  }, []);\r\n\r\n  // Function that remove image from our state\r\n  const deleteImageHandler = (imageSelected) => {\r\n    // create a copy of our state\r\n    let copyOfFormData = [...formData.imageSrc];\r\n\r\n    // filter copyOfFormData to remove the image\r\n    const copyFiltred = copyOfFormData.filter(\r\n      (image) => image !== imageSelected\r\n    );\r\n\r\n    // update our state\r\n    setFormData({\r\n      imageSrc: copyFiltred,\r\n    });\r\n  };\r\n\r\n  // upload images to cloudinary and update the state\r\n  const postPictureToCloudinary = async (pictures) => {\r\n    setLoading(true);\r\n\r\n    if (pictures.type === \"image/jpeg\" || pictures.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pictures);\r\n      data.append(\"upload_preset\", \"laghata-app\");\r\n      data.append(\"cloud_name\", \"laghata\");\r\n\r\n      try {\r\n        const postPicture = await fetch(\r\n          `${process.env.REACT_APP_CLOUDINARY_url}`,\r\n          {\r\n            method: \"POST\",\r\n            body: data,\r\n          }\r\n        );\r\n        const responseJson = await postPicture.json();\r\n\r\n        // set the imageSrc field in our state to the url that we receive from cloudinary\r\n        setFormData({\r\n          imageSrc: [...formData.imageSrc, responseJson.secure_url.toString()],\r\n        });\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(error.stack);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={() => {\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <h1>Choose Your Listing Pictures </h1>\r\n      <h3>You Can Upload Up to 5 Pictures</h3>\r\n      <InputPicture\r\n        type=\"file\"\r\n        name=\"file\"\r\n        id=\"file\"\r\n        accept=\"/image/*\"\r\n        onChange={(e) => {\r\n          postPictureToCloudinary(e.target.files[0]);\r\n        }}\r\n      />\r\n      <Label htmlFor=\"file\">Upload Pictures</Label>\r\n      {loading ? (\r\n        <Circles\r\n          height=\"30\"\r\n          width=\"30\"\r\n          color=\"#242526\"\r\n          ariaLabel=\"circles-loading\"\r\n          wrapperClass=\"spinner\"\r\n          visible={true}\r\n        />\r\n      ) : (\r\n        <ImgContainer>\r\n          {formData?.imageSrc?.map((image, index) => {\r\n            return (\r\n              <>\r\n                <ImgWrapper key={index}>\r\n                  <VscClose\r\n                    className=\"closeIcon\"\r\n                    onClick={() => deleteImageHandler(image)}\r\n                  />\r\n                  <Img src={image} alt=\"Listing Picture\" key={index} />\r\n                </ImgWrapper>\r\n              </>\r\n            );\r\n          })}\r\n        </ImgContainer>\r\n      )}\r\n      <BtnContainer>\r\n        <BackButton\r\n          type=\"button\"\r\n          onClick={() => {\r\n            handleReturn(3, formData, 35), scrollToTop();\r\n          }}\r\n        >\r\n          Back\r\n        </BackButton>\r\n\r\n        <Button\r\n          onClick={() => {\r\n            modifyIndex(5, formData, 96), scrollToTop();\r\n          }}\r\n        >\r\n          Next\r\n        </Button>\r\n      </BtnContainer>\r\n    </Form>\r\n  );\r\n};\r\n\r\n// form listing style\r\nconst Form = styled.form`\r\n  h1 {\r\n    text-align: center;\r\n    font-size: 35px;\r\n\r\n    @media screen and (max-width: 700px) {\r\n      font-size: 25px;\r\n    }\r\n  }\r\n\r\n  h3 {\r\n    text-align: center;\r\n    font-size: 20px;\r\n\r\n    @media screen and (max-width: 700px) {\r\n      font-size: 15px;\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n\r\n  .spinner {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n    padding-bottom: 10px;\r\n  }\r\n`;\r\n\r\nconst BtnContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n  gap: 15px;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    margin-top: 0px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 17px;\r\n  background: black;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  width: 20%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 33%;\r\n  }\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  padding: 10px 17px;\r\n  background: transparent;\r\n  color: black;\r\n  border: 1px solid black;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  width: 20%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 33%;\r\n  }\r\n`;\r\n\r\nconst InputPicture = styled.input`\r\n  height: 0.1px;\r\n  opacity: 0;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  z-index: -1;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 1.25em;\r\n  font-weight: 500;\r\n  color: black;\r\n  border: 1px solid;\r\n  background-color: transparent;\r\n  padding: 10px 15px;\r\n  display: flex;\r\n  width: fit-content;\r\n  margin: 30px auto;\r\n  cursor: pointer;\r\n  border-radius: 25px;\r\n  transition: all 0.5s ease-in-out;\r\n\r\n  :hover {\r\n    background-color: black;\r\n    color: white;\r\n  }\r\n\r\n  @media screen and (max-width: 700px) {\r\n    font-size: 1em;\r\n  }\r\n`;\r\n\r\nconst ImgContainer = styled.div`\r\n  width: 100%;\r\n  margin-top: 15px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 50px;\r\n  margin-top: 30px;\r\n  padding: 25px;\r\n`;\r\n\r\nconst ImgWrapper = styled.div`\r\n  position: relative;\r\n  cursor: pointer;\r\n  transition: all 0.6s ease-in;\r\n  .closeIcon {\r\n    display: none;\r\n  }\r\n\r\n  :hover {\r\n    transform: scale(1.02);\r\n    .closeIcon {\r\n      display: block;\r\n      position: absolute;\r\n      right: 5px;\r\n      top: 5px;\r\n      font-size: 30px;\r\n      color: white;\r\n      transition: all 0.6s ease-in;\r\n\r\n      :hover {\r\n        transform: rotate(90deg);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Img = styled.img`\r\n  height: 200px;\r\n  width: 200px;\r\n  border-radius: 10px;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport default UploadPhotosForm;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CardBegin from \"./CardBegin\";\r\nimport CardEnd from \"./CardEnd\";\r\nimport CategoryForm from \"./CategoryForm\";\r\nimport Indicator from \"./Indicator\";\r\nimport ProductInfoForm from \"./ProductInfoForm\";\r\nimport UploadPhotosForm from \"./UploadPhotosForm\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useUser } from \"../../hooks/useUser\";\r\n\r\n// the global form that handle all the other sub forms\r\nconst AddListingForm = () => {\r\n  // get user information from useUser hook\r\n  const user = useUser();\r\n\r\n  const [formIndex, setFormIndex] = useState(1);\r\n  const [progressBarValue, setProgressBarValue] = useState(0);\r\n  const [listingData, setListingData] = useState({\r\n    name: \"\",\r\n    price: \"\",\r\n    category: \"\",\r\n    subcategory: \"\",\r\n    description: \"\",\r\n    model: \"\",\r\n    size: \"\",\r\n    location: \"\",\r\n    imageSrc: [],\r\n    isBooked: false,\r\n    renterId: user?._id,\r\n    reservationsIds: [],\r\n    reviewsIds: [],\r\n  });\r\n\r\n  // change index of card and the state of the listing\r\n  const modifyIndex = (index, data, value) => {\r\n    setFormIndex(index);\r\n\r\n    if (data) {\r\n      // create a copy of our global state\r\n      const listingDataCopy = { ...listingData };\r\n\r\n      // update data property\r\n      const newlistingData = Object.keys(data);\r\n\r\n      newlistingData.map((key) => {\r\n        listingDataCopy[key] = data[key];\r\n      });\r\n\r\n      // update the state\r\n      setListingData(listingDataCopy);\r\n      setProgressBarValue(value);\r\n    }\r\n  };\r\n\r\n  // handle return\r\n  const handleReturn = (index, data, value) => {\r\n    modifyIndex(index, data, value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <MultiFormWrapper>\r\n          <MultiFormContainer>\r\n            <Indicator progressBarValue={progressBarValue} />\r\n            {formIndex === 1 ? (\r\n              <CardBegin modifyIndex={modifyIndex} />\r\n            ) : formIndex === 2 ? (\r\n              <CategoryForm\r\n                modifyIndex={modifyIndex}\r\n                listingData={listingData}\r\n              />\r\n            ) : formIndex === 3 ? (\r\n              <ProductInfoForm\r\n                modifyIndex={modifyIndex}\r\n                handleReturn={handleReturn}\r\n                listingData={listingData}\r\n              />\r\n            ) : formIndex === 4 ? (\r\n              <UploadPhotosForm\r\n                modifyIndex={modifyIndex}\r\n                handleReturn={handleReturn}\r\n                listingData={listingData}\r\n              />\r\n            ) : formIndex === 5 ? (\r\n              <CardEnd listingData={listingData} handleReturn={handleReturn} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </MultiFormContainer>\r\n        </MultiFormWrapper>\r\n      ) : (\r\n        <>\r\n          <Navigate to=\"/login\" />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// Multiform style\r\nconst MultiFormWrapper = styled.div`\r\n  min-height: 100vh;\r\n  position: relative;\r\n`;\r\n\r\nconst MultiFormContainer = styled.div`\r\n  max-width: 700px;\r\n  background: #f5f5f3;\r\n  margin: 200px auto 0;\r\n  position: relative;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    margin: 200px auto;\r\n    width: 80%;\r\n  }\r\n`;\r\nexport default AddListingForm;\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IoIosArrowForward, IoIosArrowBack } from \"react-icons/io\";\r\n\r\n// Image slider componenent\r\nconst ImageSlider = ({ slides }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  // function that handle slide to the previous image\r\n  const goToPreviousHandler = () => {\r\n    if (currentIndex === 0) {\r\n      setCurrentIndex(slides.length - 1);\r\n    } else {\r\n      setCurrentIndex(currentIndex - 1);\r\n    }\r\n  };\r\n\r\n  // function that handle slide to the next image\r\n  const goToNextHandler = () => {\r\n    if (currentIndex === slides.length - 1) {\r\n      setCurrentIndex(0);\r\n    } else {\r\n      setCurrentIndex(currentIndex + 1);\r\n    }\r\n  };\r\n\r\n  // function that handle the slider dots to be able to go to the specific slide\r\n  const goToSlide = (slideIndex) => {\r\n    setCurrentIndex(slideIndex);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SliderStyles>\r\n        <LeftArrowStyles onClick={goToPreviousHandler}>\r\n          <IoIosArrowBack />\r\n        </LeftArrowStyles>\r\n        <RightArrowStyles onClick={goToNextHandler}>\r\n          <IoIosArrowForward />\r\n        </RightArrowStyles>\r\n        <SlideStyle\r\n          style={{ backgroundImage: `url(${slides[currentIndex]})` }}\r\n        ></SlideStyle>\r\n        <DotContainer>\r\n          {slides.map((slide, slideIndex) => {\r\n            return (\r\n              <Dot key={slideIndex} onClick={() => goToSlide(slideIndex)}>\r\n                ◦\r\n              </Dot>\r\n            );\r\n          })}\r\n        </DotContainer>\r\n      </SliderStyles>\r\n    </>\r\n  );\r\n};\r\n\r\n// image slider style\r\nconst SliderStyles = styled.div`\r\n  height: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst SlideStyle = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 25px;\r\n  background-position: center;\r\n  background-size: cover;\r\n`;\r\n\r\nconst LeftArrowStyles = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translate(0, -50%);\r\n  left: 17px;\r\n  font-size: 45px;\r\n  color: #fff;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst RightArrowStyles = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translate(0, -50%);\r\n  right: 17px;\r\n  font-size: 45px;\r\n  color: #fff;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DotContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  position: absolute;\r\n  top: 99%;\r\n  left: 50%;\r\n  transform: translate(-50%, -99%);\r\n`;\r\n\r\nconst Dot = styled.div`\r\n  margin: 0 7px;\r\n  cursor: pointer;\r\n  font-size: 50px;\r\n  color: #f5f0ed;\r\n`;\r\nexport default ImageSlider;\r\n"],"names":["Card","styled","Title","Cardbutton","modifyIndex","onClick","Listing","LeftSide","RightSide","Span","Location","Price","Description","Modal","Size","ImgContainer","Button","BackButton","BtnContainer","listingData","handleReturn","navigate","useNavigate","useState","loading","setLoading","UploadListingToDataBase","requestOptions","method","headers","body","JSON","stringify","name","price","category","subcategory","description","model","size","location","imageSrc","isBooked","renterId","reservationsIds","reviewsIds","fetch","process","status","console","log","message","length","ImageSlider","slides","type","scrollToTop","height","width","color","ariaLabel","wrapperClass","visible","Form","formData","setFormData","useEffect","handleRadio","e","prev","target","value","onSubmit","preventDefault","onChange","id","checked","htmlFor","IndicatorContainer","ImgBloc","progressBarValue","max","className","src","alt","images","confirmation","handleChange","placeholder","required","InputPicture","Label","ImgWrapper","Img","postPictureToCloudinary","pictures","data","FormData","append","postPicture","json","responseJson","secure_url","toString","stack","accept","files","map","image","index","imageSelected","copyFiltred","filter","deleteImageHandler","MultiFormWrapper","MultiFormContainer","user","useUser","formIndex","setFormIndex","setProgressBarValue","_id","setListingData","listingDataCopy","Object","keys","key","to","SliderStyles","SlideStyle","LeftArrowStyles","RightArrowStyles","DotContainer","Dot","currentIndex","setCurrentIndex","style","backgroundImage","slide","slideIndex","goToSlide"],"sourceRoot":""}