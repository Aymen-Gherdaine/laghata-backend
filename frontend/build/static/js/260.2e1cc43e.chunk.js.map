{"version":3,"file":"static/js/260.2e1cc43e.chunk.js","mappings":"iQAsIMA,EAAyBC,EAAAA,GAAAA,IAAH,qEAKtBC,EAAOD,EAAAA,GAAAA,IAAH,6UAiBJE,EAAQF,EAAAA,GAAAA,GAAH,sKASLG,EAAUH,EAAAA,GAAAA,EAAH,yEAKPI,EAAgBJ,EAAAA,GAAAA,IAAH,8GAObK,EAAOL,EAAAA,GAAAA,IAAH,yCAIJM,EAAYN,EAAAA,GAAAA,IAAH,qMAYTO,EAAQP,EAAAA,GAAAA,MAAH,yIAQLQ,EAASR,EAAAA,GAAAA,OAAH,6bAyBZ,UA3NsB,WACpB,OAA8BS,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA8CN,EAAAA,EAAAA,UAAS,IAAvD,eAAOO,EAAP,KAAwBC,EAAxB,KACA,GAA8BR,EAAAA,EAAAA,WAAS,GAAvC,eAAOS,EAAP,KAAgBC,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,MAGTC,GAAsBC,EAAAA,EAAAA,MAAtBD,kBAGFE,EAAoB,yCAAG,WAAOC,GAAP,8EAC3BA,EAAEC,iBAEFP,GAAW,GAGLQ,EAAiB,CACrBC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEC,YAAanB,KAIhCoB,EAbqB,yCAaE,4GAEnBC,MAAM,GAAD,OACNC,oCADM,sBACyCd,EADzC,mBAETK,GAJuB,OAOzBhB,GAAW,GAEXQ,GAAW,GAEXkB,aAAaC,QAXY,gDAazBC,QAAQC,IAAI,KAAMC,SAClB5B,GAAS,GACTM,GAAW,GAfc,yDAbF,qDA+B3Be,IAEAf,GAAW,GAjCgB,2CAAH,sDAmC1B,OACE,SAACpB,EAAD,WACE,SAACE,EAAD,WACE,kBAAMyC,SAAUlB,EAAhB,WACE,SAACpB,EAAD,WACE,SAACC,EAAD,CAAMsC,IAAKC,EAAWC,IAAI,gBAE3BnC,GACC,iCACE,SAACR,EAAD,uBACA,SAACC,EAAD,uFAIA,SAACK,EAAD,CACEsC,QAAS,WACP1B,EAAS,WAAW2B,EAAAA,EAAAA,KACrB,EAHH,uBASF,iCACE,SAAC7C,EAAD,8BACA,SAACC,EAAD,+CACCS,IACC,SAACT,EAAD,iEAIF,UAACG,EAAD,YACE,SAACC,EAAD,CACEyC,KAAK,WACLC,YAAY,WACZC,SAAU,SAACzB,GACTV,EAAYU,EAAE0B,OAAOC,MACtB,EACDC,UAAQ,KAEV,SAAC9C,EAAD,CACEyC,KAAK,WACLC,YAAY,mBACZC,SAAU,SAACzB,GACTR,EAAmBQ,EAAE0B,OAAOC,MAC7B,EACDC,UAAQ,QAGZ,SAAC7C,EAAD,CACEwC,KAAK,SACLM,SACExC,EAASyC,gBAAkBvC,EAAgBuC,eAC9B,KAAbzC,GACoB,KAApBE,EALJ,SAQGE,GACC,SAAC,KAAD,CACEsC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAa,UACbC,SAAS,IAGX,4BASjB,C","sources":["components/auth/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport logoBlack from \"../../assets/logoBlack.png\";\r\nimport { scrollToTop } from \"../../utils/utils\";\r\nimport { Circles } from \"react-loader-spinner\";\r\n\r\nconst ResetPassword = () => {\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // getting passwordResetCode from the url\r\n  const { passwordResetCode } = useParams();\r\n\r\n  // passwordReset handler\r\n  const passwordResetHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    // POST info to server\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ newPassword: password }),\r\n    };\r\n\r\n    // function that handle the post of data to db\r\n    const resetPasswordHandler = async () => {\r\n      try {\r\n        await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/api/users/${passwordResetCode}/reset-password`,\r\n          requestOptions\r\n        );\r\n\r\n        setSuccess(true);\r\n\r\n        setLoading(false);\r\n\r\n        localStorage.clear();\r\n      } catch (error) {\r\n        console.log(error.message);\r\n        setError(true);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    resetPasswordHandler();\r\n\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <ResetPasswordContainer>\r\n      <Info>\r\n        <form onSubmit={passwordResetHandler}>\r\n          <LogoContainer>\r\n            <Logo src={logoBlack} alt=\"logoBlack\" />\r\n          </LogoContainer>\r\n          {success ? (\r\n            <>\r\n              <Title>Success</Title>\r\n              <Message>\r\n                Your Password has been changed, now please login with your new\r\n                password\r\n              </Message>\r\n              <Button\r\n                onClick={() => {\r\n                  navigate(\"/login\"), scrollToTop();\r\n                }}\r\n              >\r\n                Login\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Title>Reset Password</Title>\r\n              <Message>Please enter your a new password</Message>\r\n              {error && (\r\n                <Message>\r\n                  We couldn't update your password please try again\r\n                </Message>\r\n              )}\r\n              <InputsDiv>\r\n                <Input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                  }}\r\n                  required\r\n                />\r\n                <Input\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  onChange={(e) => {\r\n                    setConfirmPassword(e.target.value);\r\n                  }}\r\n                  required\r\n                />\r\n              </InputsDiv>\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={\r\n                  password.toLowerCase() !== confirmPassword.toLowerCase() ||\r\n                  password === \"\" ||\r\n                  confirmPassword === \"\"\r\n                }\r\n              >\r\n                {loading ? (\r\n                  <Circles\r\n                    height=\"30\"\r\n                    width=\"30\"\r\n                    color=\"#54cbe3\"\r\n                    ariaLabel=\"circles-loading\"\r\n                    wrapperClass=\"spinner\"\r\n                    visible={true}\r\n                  />\r\n                ) : (\r\n                  \"Reset Password\"\r\n                )}\r\n              </Button>\r\n            </>\r\n          )}\r\n        </form>\r\n      </Info>\r\n    </ResetPasswordContainer>\r\n  );\r\n};\r\n\r\n// style ResetPassword page\r\nconst ResetPasswordContainer = styled.div`\r\n  min-height: 100vh;\r\n  position: relative;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  width: fit-content;\r\n  padding: 50px;\r\n  margin: 10rem auto;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 12px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 90%;\r\n    padding: 30px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 15px 0 5px 0;\r\n  font-size: 30px;\r\n  margin: 20px 0 10px 0;\r\n`;\r\n\r\nconst Message = styled.p`\r\n  margin: 20px 0 20px 0;\r\n  text-align: center;\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 150px;\r\n`;\r\n\r\nconst InputsDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1.5rem;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 12px 10px;\r\n  border-radius: 25px;\r\n  outline: none;\r\n  font-size: 17px;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 12px 15px;\r\n  color: white;\r\n  background: black;\r\n  border: 1px solid white;\r\n  border-radius: 25px;\r\n  font-size: 18px;\r\n  transition: all 0.7s ease-in-out;\r\n  margin: 25px 0;\r\n  width: 100%;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: transparent;\r\n    color: black;\r\n    border: 1px solid black;\r\n  }\r\n\r\n  .spinner {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport default ResetPassword;\r\n"],"names":["ResetPasswordContainer","styled","Info","Title","Message","LogoContainer","Logo","InputsDiv","Input","Button","useState","success","setSuccess","error","setError","password","setPassword","confirmPassword","setConfirmPassword","loading","setLoading","navigate","useNavigate","passwordResetCode","useParams","passwordResetHandler","e","preventDefault","requestOptions","method","headers","body","JSON","stringify","newPassword","resetPasswordHandler","fetch","process","localStorage","clear","console","log","message","onSubmit","src","logoBlack","alt","onClick","scrollToTop","type","placeholder","onChange","target","value","required","disabled","toLowerCase","height","width","color","ariaLabel","wrapperClass","visible"],"sourceRoot":""}